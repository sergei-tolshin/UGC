"""initial

Revision ID: c795938d63e6
Revises: 
Create Date: 2022-04-27 15:12:19.453474

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c795938d63e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='auth'
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='auth'
    )
    op.create_index(op.f('ix_auth_users_email'), 'users', ['email'], unique=True, schema='auth')
    op.create_table('journal',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action', postgresql.ENUM('login', 'logout', 'change_email', 'change_password', 'password_recovery', name='action'), nullable=False),
    sa.Column('ip', sa.String(length=20), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('_device_type', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.id'], ),
    sa.PrimaryKeyConstraint('id', '_device_type'),
    sa.UniqueConstraint('id', '_device_type'),
    schema='auth',
    postgresql_partition_by='LIST (_device_type)'
    )
    op.execute("""
        CREATE TABLE IF NOT EXISTS "journal_in_smart" PARTITION OF "journal" FOR VALUES IN ('smart');
        CREATE TABLE IF NOT EXISTS "journal_in_mobile" PARTITION OF "journal" FOR VALUES IN ('mobile');
        CREATE TABLE IF NOT EXISTS "journal_in_web" PARTITION OF "journal" FOR VALUES IN ('web');
    """)
    op.create_table('profiles',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['auth.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    op.create_table('roles_users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['auth.roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='auth'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users', schema='auth')
    op.drop_table('profiles', schema='auth')
    op.execute("""
        DROP TABLE IF EXIST "journal_in_smart";
        DROP TABLE IF EXIST "journal_in_mobile";
        DROP TABLE IF EXIST "journal_in_web";
    """)
    op.drop_table('journal', schema='auth')
    op.drop_index(op.f('ix_auth_users_email'), table_name='users', schema='auth')
    op.drop_table('users', schema='auth')
    op.drop_table('roles', schema='auth')
    # ### end Alembic commands ###
