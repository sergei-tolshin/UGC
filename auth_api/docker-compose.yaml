version: '3.8'
services:

  redis:
    container_name: redis_auth
    image: redis:6.2.6
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  pg_db:
    container_name: pg_auth
    image: postgres:13
    restart: always
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - ./deploy/db:/docker-entrypoint-initdb.d
    env_file:
      - ./.env

  nginx:
    container_name: nginx_auth
    image: nginx:stable
    restart: always
    ports:
      - 80:80
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
    depends_on:
      - auth_api
    logging:
        driver: gelf
        options:
          gelf-address: udp://127.0.0.1:5044
          tag: auth_nginx

  auth_api:
    container_name: auth_api
    build:
      context: .
      dockerfile: Dockerfile
    image: auth_api:latest
    pull_policy: never
    restart: always
    expose:
      - 5000
    depends_on:
      - pg_db
      - redis
      - auth_api_migrations
    env_file:
      - ./.env
    logging:
        driver: gelf
        options:
          gelf-address: udp://127.0.0.1:5044
          tag: auth_api

  auth_api_migrations:
    container_name: auth_api_migrations
    image: auth_api:latest
    pull_policy: never
    restart: "no"
    expose:
      - 5000
    depends_on:
      - pg_db
      - redis
    env_file:
      - ./.env
    command: ["flask", "db", "upgrade"]

  grpc:
    container_name: auth_grpc
    build:
        context: ./src/grpc
        dockerfile: Dockerfile
    image: grpc_api
    expose:
      - ${GRPC_PORT}
    depends_on:
      - pg_db
      - redis
      - auth_api
    env_file: ./.env
    logging:
        driver: gelf
        options:
          gelf-address: udp://127.0.0.1:5044
          tag: auth_grpc

volumes:
  pg_data:
    name: pg_auth_volume
  redis_data:
    name: redis_auth_volume
